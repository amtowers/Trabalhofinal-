knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(magrittr)
library(knitr)
library(kableExtra)
library(rmarkdown)
library(tidyverse)
library(lubridate)
library(janitor)
library(readxl)
library(tidyr)
library(tibble)
library(haven)
library(stringr)
library(mfx)
library(rcompanion)
library(pROC)
library(caret)
setwd("~/Métodos Quantitativos/Trabalhofinal")
STF_tabalho_final <- readxl::read_xlsx("~/Métodos Quantitativos/Trabalhofinal/STF_Trabalho_final4.xlsx")
glimpse(stf_covid_19,5)
STF_tabalho_final %>% xtabs(~STF_tabalho_final$Decisao + STF_tabalho_final$Classe,data=.)
STF_tabalho_final %>% filter(!is.na(Classe)) %>%
mutate(Part = str_detect(Classe,"ADI"),Part = case_when
(Part==TRUE~"ADI",Covid_19==FALSE~"Outras")) %>%
group_by(Relator,Part) %>%
summarise(n=n()) %>%
spread(Part,n,fill = 0) %>%
mutate(total = ADI + Outras,proporcao=ADI/total) %>%
arrange(desc(proporcao)) %>% head(5)
STF_tabalho_final %>% xtabs(~STF_tabalho_final$Decisao + STF_tabalho_final$Classe,data=.)
STF_tabalho_final %>% filter(!is.na(Classe)) %>%
mutate(Part = str_detect(Classe,"ADI"),Part = case_when
(Part==TRUE~"ADI",Part==FALSE~"Outras")) %>%
group_by(Relator,Part) %>%
summarise(n=n()) %>%
spread(Part,n,fill = 0) %>%
mutate(total = ADI + Outras,proporcao=ADI/total) %>%
arrange(desc(proporcao)) %>% head(5)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>%
mutate(Favoravel = str_detect(Decisao,"1"),Favoravel = case_when(Favoravel==TRUE~"Favoravel",Favoravel==FALSE~"nao_Favoravel")) %>%
group_by(Relator,Favoravel) %>%  summarise(n=n()) %>%  spread(Favoravel,n,fill = 0) %>%
mutate(total = Favoravel + nao_Favoravel,proporcao=Favoravel/total) %>%
arrange(desc(proporcao))
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Classe, - proporcao),fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Classe de Ação") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao),fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporção,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao),fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao),fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,.5)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao))) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,.5)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao,fill=proporcao))) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,.5)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao),fill=proporcao))) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,.5)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao,fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao),fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,.5)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Classe,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(reorder(Classe, - proporcao),proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Classe de Ação") +ylab("Grau de Sucesso") + ggtitle("Covid-19: Grau de sucesso (%) por classe das açoes junto ao STF")+geom_label(aes(label=round(proporcao,1)),color="black",fill="white",size=3)
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>% mutate(Sucesso = str_detect(Decisao,"1"),Sucesso = case_when(Sucesso==TRUE~"Sucesso",Sucesso==FALSE~"Insucesso")) %>%
group_by(Comport_Min,Sucesso) %>%
summarise(n=n()) %>%
spread(Sucesso,n,fill = 0) %>%
mutate(total = Sucesso + Insucesso,proporcao=Sucesso/total*100) %>%
arrange(desc(proporcao)) %>%
ggplot(aes(proporcao,reorder(Comport_Min, - proporcao),fill=proporcao)) + geom_bar(stat = "identity") + theme_bw(base_size = 10) + scale_fill_viridis_b() + xlab("Grau de sucesso") +ylab("Comportamento do Ministro") + ggtitle("Covid-19: Grau de sucesso (%) por Comportamento do Ministro")+geom_label(aes(label=round(proporcao,.5)),color="black",fill="white",size=3)
STF_tabalho_final %>% xtabs(~STF_tabalho_final$Decisao + STF_tabalho_final$Classe,data=.)
STF_tabalho_final %>% filter(!is.na(Classe)) %>%
mutate(Part = str_detect(Classe,"ADI"),Part = case_when
(Part==TRUE~"ADI",Part==FALSE~"Outras")) %>%
group_by(Relator,Part) %>%
summarise(n=n()) %>%
spread(Part,n,fill = 0) %>%
mutate(total = ADI + Outras,proporcao=ADI/total) %>%
arrange(desc(proporcao))
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>%
mutate(Favoravel = str_detect(Decisao,"1"),Favoravel = case_when(Favoravel==TRUE~"Favoravel",Favoravel==FALSE~"nao_Favoravel")) %>%
group_by(Relator,Favoravel) %>%  summarise(n=n()) %>%  spread(Favoravel,n,fill = 0) %>%
mutate(total = Favoravel + nao_Favoravel,proporcao=Favoravel/total) %>%
arrange(desc(proporcao))
STF_tabalho_final %>%
filter(!is.na(Decisao)) %>%
mutate(Favoravel = str_detect(Decisao,"1"),Favoravel = case_when(Favoravel==TRUE~"Favoravel",Favoravel==FALSE~"nao_Favoravel")) %>%
group_by(Relator,Favoravel) %>%  summarise(n=n()) %>%  spread(Favoravel,n,fill = 0) %>%
mutate(total = Favoravel + nao_Favoravel,proporcao=Favoravel/total) %>%
arrange(desc(proporcao))
ggplot(STF_Trabalho_final4,aes(x=Comport_Min,y=Decisao)) + geom_point() + geom_smooth(method=”glm”,methods.argrs=list(family=”binomial))
ggplot(STF_Trabalho_final4,aes(x=Comport_Min,y=Decisao)) + geom_point() + geom_smooth(method=glm,methods.argrs=list(family=”binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_point() + geom_smooth(method=glm,methods.argrs=list(family=”binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_point() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) geom_path()+ geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) geom_contour() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) geom_point(size=8) + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) geom_point() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) geom_point() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) geom_point() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_point() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_contour() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_boxplot() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_count() + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_count(color="red") + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_count(color="red",size=9) + geom_smooth(method=glm,methods.args=list(family=binomial))
STF_tabalho_final %>% ggplot(aes(x=Comport_Min,y=Decisao)) + geom_count(color="red") + geom_smooth(method=glm,methods.args=list(family=binomial))
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
(y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .))
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .) %>% summary()
y
(y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .) %>% summary())
anova(y,test="Chisq")
Anova(y,test="Chisq")
ancova(y,test="Chisq")
anova(y,test="Chisq")
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
coef(y) %>% exp()
install.packages("ResourceSelection")
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
nagelkerke(y)
(y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .))
anova(y,test="Chisq")
nagelkerke(y)
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = STF_tabalho_final)
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
nagelkerke()
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
nagelkerke(y)
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_tabalho_final)
nagelkerke(z)
hoslem.test(Decisao,fitted(y))
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_tabalho_final)
nagelkerke(z)
ResourceSelection::hoslem.test(Decisao, fitted(z))
y <- STF_tabalho_final %>% glm(Decisao~Comport_Min, family = binomial(link="logit"),data = .)
anova(y,test="Chisq")
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_tabalho_final)
nagelkerke(z)
ResourceSelection::hoslem.test(STF_tabalho_final$Decisao, fitted(z))
coef(y) %>% exp()
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="reponse")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao)) + geom_point(aes(y=Decisao_predita,color="Modelo")) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao)) + geom_point(aes(y=Decisao_predita,color="Modelo")) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao)) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo")) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=8) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo")) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=8) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo"),size=6) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=10) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo"),size=6) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=12) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo"),size=6) +guides(color=guide_legend("Comparação"))
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=12) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo"),size=6) +guides(color=guide_legend("Comparação")) + facet_wrap(~Decisao_prevista)
STF_tabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=12) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo"),size=6) +guides(color=guide_legend("Comparação")) + facet_wrap(~Decisao_predita)
coef(y) %>% exp()
exp(cbind(OR=coef(y), confint(y)))
coef(y) %>% exp()
exp(cbind(OR=coef(y), confint(y)))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
(Fachin <- data_frame(Comport_Min==1))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
(Fachin <- STF_tabalho_final %>% data_frame(Comport_Min==1))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
(Fachin <- STF_tabalho_final %>% data_frame(Comport_Min==1))
Fachin$pred_prob <- predict(z, newdata=Fachin, type="response")
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- STF_tabalho_final %>% data_frame(Comport_Min==1)
Fachin
Fachin$pred_prob <- predict(z, newdata=Fachin, type="response")
Fachin
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- data_frame(Comport_Min==1)
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- STF_tabalho_final %>%  data_frame(STF_tabalho_final$Comport_Min=mean(STF_tabalho_final$Comport_Min))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- STF_tabalho_final %>%  data_frame(STF_tabalho_final$Comport_Min = mean(STF_tabalho_final$Comport_Min))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- STF_tabalho_final %>%  data_frame(Comport_Min = mean(STF_tabalho_final$Comport_Min))
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- STF_tabalho_final %>%  data_frame(Comport_Min = STF_tabalho_final$Comport_Min)
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- predict(z, newdata=1, type="response")
coef(y) %>% exp() # Razão de chance (Oddsratio)
exp(cbind(OR=coef(y), confint(y)))
#Existindo comportamento contramajoritário (ministro com comportamento contramajoritário, por exemplo Edson Fachin) qual seria a probabilidade de ter sucesso na ação que discute o tema da Covid-19?
Fachin <- STF_tabalho_final %>%  predict(z, newdata=1, type="response")
View(STF_tabalho_final)
k <- as.factor(
ifelse(
predict(z,
newdata = STF_trabalho_final,
type = "response")
>0.5,"1","0"))
k <- as.factor(
ifelse(
predict(z,
newdata = STF_trabalho_final,
type = "response")
>0.5,"1","0"))
View(z)
View(STF_tabalho_final)
library(dplyr)
library(ggplot2)
library(magrittr)
library(knitr)
library(kableExtra)
library(rmarkdown)
library(tidyverse)
library(lubridate)
library(janitor)
library(readxl)
library(tidyr)
library(tibble)
library(haven)
library(stringr)
library(mfx)
library(rcompanion)
library(pROC)
library(caret)
library(ResourceSelection)
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
k <- as.factor(
ifelse(
predict(z,
newdata = STF_trabalho_final,
type = "response")
>0.5,"1","0"))
STF_trabalho_final <- readxl::read_xlsx("~/Métodos Quantitativos/Trabalhofinal/STF_Trabalho_final4.xlsx")
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
k <- as.factor(
ifelse(
predict(z,
newdata = STF_trabalho_final,
type = "response")
>0.5,"1","0"))
confusionMatrix(k,STF_trabalho_final$Decisao,positive="1")
y <- as.factor(STF_trabalho_final$Decisao)
confusionMatrix(k,y,positive="1")
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
k <- as.factor(
ifelse(
predict(z,
newdata = STF_trabalho_final,
type = "response")
>0.5,"1","0"))
w <- as.factor(STF_trabalho_final$Decisao)
confusionMatrix(k,w,positive="1")
roc1=plot.roc(STF_trabalho_final$Decisao,fitted(z))
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
z <- glm(Decisao~Comport_Min, family = binomial(link="logit"),data =STF_trabalho_final)
install.packages("PRROC")
knitr::opts_chunk$set(echo = TRUE)
# Razão de chance (Oddsratio)
coef(z) %>% exp()
STF_trabalho_final %>% mutate(Decisao_predita=predict(z,type="response")) %>% mutate(Decisao_predita=if_else(Decisao_predita>.5,1,0)) %>% ggplot()+geom_point(aes(x=Comport_Min,y=Decisao,color="Realidade"),size=12) + geom_point(aes(x=Comport_Min,y=Decisao_predita,color="Modelo"),size=6) +guides(color=guide_legend("Comparação"))
